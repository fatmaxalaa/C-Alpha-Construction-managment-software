@{
    Layout = "~/Views/Shared/_ AdminLayoutPage.cshtml";
}

<script src="~/lib/daypilot/daypilot-all.min.js" asp-append-version="true"></script>


@section PageSec
{
    <section class="home-section" id="home">
        <div class="home-content">  
            <div class="main" style="display: flex; margin-top:1%; margin-left:1%; ">
            <div style="">
                <div id="nav"></div>
            </div>
            <div style="flex-grow: 1; margin-left: 10px; ">
                <div class="navi">
                    <button id="previous" class="btn btn-secondary">
                        @*<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 12 12">*@
                            @*<use href="icons/daypilot.svg#minichevron-left-2"></use>*@
                            <i class="fa-solid fa-angles-left text-white m-0" style="font-size:15px"></i>
                      @*  </svg>*@
                    </button>
                    <button id="today" class="highlighted btn btn-outline-primary">Today</button>
                    <button id="next" class="btn btn-secondary">
                        @*<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 12 12">*@
                            <i class="fa-solid fa-angles-right text-white m-0" style="font-size:15px"></i>
                            @*<use href="icons/daypilot.svg#minichevron-right-2"></use>*@
                        @*</svg>*@
                    </button>
                </div>
                 <button class="btnloading" style="position:absolute;top:65px;left:530px;padding:13px 21px;z-index: 1000000;border:none;">
                     @*<i class="fa-solid fa-calendar"></i>*@
                 </button>
                 <div id="dp" style="margin-top:2% ; height:100vh">
                 </div>
           </div>
         </div>
       </div>
    </section>
}



<script>

    const nav = new DayPilot.Navigator("nav");
    nav.showMonths = 3;
    nav.skipMonths = 3;
    nav.selectMode = "month";
    nav.onTimeRangeSelected = args => {
        dp.startDate = args.day;
        dp.update();
        dp.events.load("/api/events");
    };
    nav.init();
    

    const dp = new DayPilot.Month("dp");
    dp.eventHeight = 30;
    dp.onTimeRangeSelected = async args => {
        const modal = await DayPilot.Modal.prompt("Create a new event:", "Event");
        
        const dp = args.control;
        dp.clearSelection();
        if (modal.canceled) {
            return;
        }
        const params = {
            start: args.start,
            end: args.end,
            text: modal.result,
            resource: args.resource
        };
        const { data: result } = await DayPilot.Http.post("/api/events", params);
        dp.events.add(result);
        dp.message("Event created");
    
    };
    dp.onEventMove = async args => {
        const params = {
            id: args.e.id(),
            start: args.newStart,
            end: args.newEnd
        };
        const id = args.e.id();
        await DayPilot.Http.put(`/api/events/${id}/move`, params);
        dp.message("Event moved");
    };
    dp.onEventResize = async args => {
        const params = {
            id: args.e.id(),
            start: args.newStart,
            end: args.newEnd
        };
        const id = args.e.id();
        await DayPilot.Http.put(`/api/events/${id}/move`, params);
        dp.message("Event resized");
    };
    dp.onBeforeEventRender = args => {
        args.data.backColor = args.data.color;
        if (args.data.backColor) {
            args.data.fontColor = "white";
            args.data.borderColor = "darker";
        }
        args.data.areas = [
            {
                top: 6,
                right: 4,
                width: 16,
                height: 16,
                symbol: "icons/daypilot.svg#minichevron-down-4",
                fontColor: "#999",
                visibility: "Hover",
                action: "ContextMenu",
                style: "background-color: #f9f9f9; border: 1px solid #ccc; cursor:pointer;"
            }
        ];
    };
    dp.contextMenu = new DayPilot.Menu({
        items: [
            {
                text: "Delete",
                onClick: async args => {
                    const e = args.source;
                    const id = e.id();
                    await DayPilot.Http.delete(`/api/events/${id}`);
                    dp.events.remove(e);
                    dp.message("Event deleted");                            
                }
            },
            {
                text: "-"
            },
            {
                text: "Blue",
                icon: "icon icon-blue",
                color: "#3c78d8",
                onClick: args => { updateColor(args.source, args.item.color); }
            },
            {
                text: "Green",
                icon: "icon icon-green",
                color: "#6aa84f",
                onClick: args => { updateColor(args.source, args.item.color); }
            },
            {
                text: "Yellow",
                icon: "icon icon-yellow",
                color: "#f1c232",
                onClick: args => { updateColor(args.source, args.item.color); }
            },
            {
                text: "Red",
                icon: "icon icon-red",
                color: "#cc4125",
                onClick: args => { updateColor(args.source, args.item.color); }
            },
            {
                text: "Auto",
                color: "",
                onClick: args => { updateColor(args.source, args.item.color); }
            },
        ]
    });
    dp.init();

    dp.events.load("/api/events");


    async function updateColor(e, color) {
        const params = {
            color: color
        };
        const id = e.id();
        await DayPilot.Http.put(`/api/events/${id}/color`, params);
        e.data.color = color;
        dp.events.update(e);
        dp.message("Color updated");
    }

    const elements = {
        previous: document.querySelector("#previous"),
        today: document.querySelector("#today"),
        next: document.querySelector("#next"),
    };

    elements.previous.addEventListener("click", () => {
        nav.select(nav.selectionDay.addMonths(-1));
    });

    elements.today.addEventListener("click", () => {
        nav.select(DayPilot.Date.today());
    });

    elements.next.addEventListener("click", () => {
        nav.select(nav.selectionDay.addMonths(1));
    });

</script>
